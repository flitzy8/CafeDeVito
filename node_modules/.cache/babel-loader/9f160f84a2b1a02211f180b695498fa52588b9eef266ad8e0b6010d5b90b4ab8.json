{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\FullstackReact\\\\fullstack\\\\src\\\\screens\\\\OrderScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { addToOrder, clearOrder, listCategories, listProducts, removeFromOrder } from '../actions';\nimport { Avatar, Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Dialog, DialogTitle, Grid, List, ListItem, Slide, TextField, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Alert } from '@material-ui/lab';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrderScreen(props) {\n  _s();\n  const styles = useStyles();\n  const {\n    state,\n    dispatch\n  } = useContext(Store);\n  const {\n    categories,\n    loading,\n    error\n  } = state.categoryList;\n  const {\n    products,\n    loading: loadingProducts,\n    error: errorProducts\n  } = state.productList;\n  const {\n    orderItems,\n    itemsCount,\n    totalPrice,\n    taxPrice,\n    orderType\n  } = state.order;\n  const [categoryName, setCategoryName] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState({});\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  const productClickHandler = p => {\n    setProduct(p);\n    setIsOpen(true);\n  };\n  const addToOrderHandler = () => {\n    addToOrder(dispatch, {\n      ...product,\n      quantity\n    });\n    setIsOpen(false);\n  };\n  const cancelOrRemoveFromOrder = () => {\n    removeFromOrder(dispatch, product);\n    setIsOpen(false);\n  };\n  const previewOrderHandler = () => {\n    props.history.push(`/review`);\n  };\n  useEffect(() => {\n    if (!categories) {\n      listCategories(dispatch);\n    } else {\n      listProducts(dispatch, categoryName);\n    }\n  }, [categories, categoryName]);\n  const categoryClickHandler = name => {\n    setCategoryName(name);\n    listProducts(dispatch, categoryName);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: closeHandler,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        open: isOpen,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          className: styles.center,\n          children: [\"Add \", product.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: [styles.row, styles.center],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: quantity === 1,\n            onClick: e => quantity > 1 && setQuantity(quantity - 1),\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            inputProps: {\n              className: styles.largeInput\n            },\n            InputProps: {\n              bar: true,\n              inputProps: {\n                className: styles.largeInput\n              }\n            },\n            className: styles.largeNumber,\n            type: \"number\",\n            variant: \"filled\",\n            min: 1,\n            value: quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: e => setQuantity(quantity + 1),\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: [styles.row, styles.around],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancelOrRemoveFromOrder,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            className: styles.largeButton,\n            children: orderItems.find(x => x.name === product.name) ? 'Remove From Order' : 'Cancel'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addToOrderHandler,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            className: styles.largeButton,\n            children: \"ADD To Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => categoryClickHandler(''),\n                children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => categoryClickHandler(category.name),\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: category.name,\n                  src: category.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)\n              }, category.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            className: styles.title,\n            variant: \"h2\",\n            component: \"h2\",\n            children: categoryName || 'Main Menu'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: loadingProducts ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this) : errorProducts ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: errorProducts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this) : products.map(product => /*#__PURE__*/_jsxDEV(Slide, {\n              direction: \"up\",\n              in: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: styles.card,\n                  onClick: () => productClickHandler(product),\n                  children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                      component: \"img\",\n                      alt: product.name,\n                      image: product.image,\n                      className: styles.media\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        gutterBottom: true,\n                        variant: \"body2\",\n                        color: \"textPrimary\",\n                        component: \"p\",\n                        children: product.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        className: styles.cardFooter,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          component: \"p\",\n                          children: [product.calorie, \" Cal\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textPrimary\",\n                          component: \"p\",\n                          children: [\"$\", product.price]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)\n            }, product.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: [styles.bordered, styles.space],\n          children: [\"My Order - \", orderType, \" | Tax: $\", taxPrice, \" | Total: $\", totalPrice, \" | Items: \", itemsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: [styles.row, styles.around],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              clearOrder(dispatch);\n              props.history.push(`/`);\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            className: styles.largeButton,\n            children: \"Cancel Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: previewOrderHandler,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: orderItems.length === 0,\n            className: styles.largeButton,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderScreen, \"U/2Mgi8Z7jv6avJj95EQbW62ZT4=\", false, function () {\n  return [useStyles];\n});\n_c = OrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Store","addToOrder","clearOrder","listCategories","listProducts","removeFromOrder","Avatar","Box","Button","Card","CardActionArea","CardContent","CardMedia","CircularProgress","Dialog","DialogTitle","Grid","List","ListItem","Slide","TextField","Typography","AddIcon","RemoveIcon","Alert","useStyles","Logo","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderScreen","props","_s","styles","state","dispatch","categories","loading","error","categoryList","products","loadingProducts","errorProducts","productList","orderItems","itemsCount","totalPrice","taxPrice","orderType","order","categoryName","setCategoryName","quantity","setQuantity","isOpen","setIsOpen","product","setProduct","closeHandler","productClickHandler","p","addToOrderHandler","cancelOrRemoveFromOrder","previewOrderHandler","history","push","categoryClickHandler","name","className","root","children","main","onClose","open","fullWidth","maxWidth","center","fileName","_jsxFileName","lineNumber","columnNumber","row","variant","color","disabled","onClick","e","inputProps","largeInput","InputProps","bar","largeNumber","type","min","value","around","size","largeButton","find","x","container","item","md","severity","button","map","category","alt","src","image","gutterBottom","title","component","spacing","direction","in","card","media","cardFooter","calorie","price","bordered","space","length","_c","$RefreshReg$"],"sources":["C:/laragon/www/FullstackReact/fullstack/src/screens/OrderScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport {\r\n  addToOrder,\r\n  clearOrder,\r\n  listCategories,\r\n  listProducts,\r\n  removeFromOrder,\r\n} from '../actions';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Slide,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useStyles } from '../styles';\r\nimport Logo from '../components/Logo';\r\nexport default function OrderScreen(props) {\r\n  const styles = useStyles();\r\n  const { state, dispatch } = useContext(Store);\r\n  const { categories, loading, error } = state.categoryList;\r\n  const {\r\n    products,\r\n    loading: loadingProducts,\r\n    error: errorProducts,\r\n  } = state.productList;\r\n  const {\r\n    orderItems,\r\n    itemsCount,\r\n    totalPrice,\r\n    taxPrice,\r\n    orderType,\r\n  } = state.order;\r\n\r\n  const [categoryName, setCategoryName] = useState('');\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n  const closeHandler = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const productClickHandler = (p) => {\r\n    setProduct(p);\r\n    setIsOpen(true);\r\n  };\r\n  const addToOrderHandler = () => {\r\n    addToOrder(dispatch, { ...product, quantity });\r\n    setIsOpen(false);\r\n  };\r\n  const cancelOrRemoveFromOrder = () => {\r\n    removeFromOrder(dispatch, product);\r\n    setIsOpen(false);\r\n  };\r\n  const previewOrderHandler = () => {\r\n    props.history.push(`/review`);\r\n  };\r\n  useEffect(() => {\r\n    if (!categories) {\r\n      listCategories(dispatch);\r\n    } else {\r\n      listProducts(dispatch, categoryName);\r\n    }\r\n  }, [categories, categoryName]);\r\n\r\n  const categoryClickHandler = (name) => {\r\n    setCategoryName(name);\r\n    listProducts(dispatch, categoryName);\r\n  };\r\n\r\n  return (\r\n    <Box className={styles.root}>\r\n      <Box className={styles.main}>\r\n        <Dialog\r\n          onClose={closeHandler}\r\n          aria-labelledby=\"max-width-dialog-title\"\r\n          open={isOpen}\r\n          fullWidth={true}\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle className={styles.center}>\r\n            Add {product.name}\r\n          </DialogTitle>\r\n          <Box className={[styles.row, styles.center]}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={quantity === 1}\r\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\r\n            >\r\n              <RemoveIcon />\r\n            </Button>\r\n            <TextField\r\n              inputProps={{ className: styles.largeInput }}\r\n              InputProps={{\r\n                bar: true,\r\n                inputProps: {\r\n                  className: styles.largeInput,\r\n                },\r\n              }}\r\n              className={styles.largeNumber}\r\n              type=\"number\"\r\n              variant=\"filled\"\r\n              min={1}\r\n              value={quantity}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => setQuantity(quantity + 1)}\r\n            >\r\n              <AddIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box className={[styles.row, styles.around]}>\r\n            <Button\r\n              onClick={cancelOrRemoveFromOrder}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={styles.largeButton}\r\n            >\r\n              {orderItems.find((x) => x.name === product.name)\r\n                ? 'Remove From Order'\r\n                : 'Cancel'}\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={addToOrderHandler}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={styles.largeButton}\r\n            >\r\n              ADD To Order\r\n            </Button>\r\n          </Box>\r\n        </Dialog>\r\n\r\n        <Grid container>\r\n          <Grid item md={2}>\r\n            <List>\r\n              {loading ? (\r\n                <CircularProgress />\r\n              ) : error ? (\r\n                <Alert severity=\"error\">{error}</Alert>\r\n              ) : (\r\n                <>\r\n                  <ListItem button onClick={() => categoryClickHandler('')}>\r\n                    <Logo></Logo>\r\n                  </ListItem>\r\n                  {categories.map((category) => (\r\n                    <ListItem\r\n                      key={category.name}\r\n                      button\r\n                      onClick={() => categoryClickHandler(category.name)}\r\n                    >\r\n                      <Avatar alt={category.name} src={category.image} />\r\n                    </ListItem>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </List>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Typography\r\n              gutterBottom\r\n              className={styles.title}\r\n              variant=\"h2\"\r\n              component=\"h2\"\r\n            >\r\n              {categoryName || 'Main Menu'}\r\n            </Typography>\r\n\r\n            <Grid container spacing={1}>\r\n              {loadingProducts ? (\r\n                <CircularProgress />\r\n              ) : errorProducts ? (\r\n                <Alert severity=\"error\">{errorProducts}</Alert>\r\n              ) : (\r\n                products.map((product) => (\r\n                  <Slide key={product.name} direction=\"up\" in={true}>\r\n                    <Grid item md={6}>\r\n                      <Card\r\n                        className={styles.card}\r\n                        onClick={() => productClickHandler(product)}\r\n                      >\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            alt={product.name}\r\n                            image={product.image}\r\n                            className={styles.media}\r\n                          />\r\n                          <CardContent>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"body2\"\r\n                              color=\"textPrimary\"\r\n                              component=\"p\"\r\n                            >\r\n                              {product.name}\r\n                            </Typography>\r\n                            <Box className={styles.cardFooter}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                              >\r\n                                {product.calorie} Cal\r\n                              </Typography>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textPrimary\"\r\n                                component=\"p\"\r\n                              >\r\n                                ${product.price}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Slide>\r\n                ))\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box>\r\n        <Box>\r\n          <Box className={[styles.bordered, styles.space]}>\r\n            My Order - {orderType} | Tax: ${taxPrice} | Total: ${totalPrice} |\r\n            Items: {itemsCount}\r\n          </Box>\r\n          <Box className={[styles.row, styles.around]}>\r\n            <Button\r\n              onClick={() => {\r\n                clearOrder(dispatch);\r\n                props.history.push(`/`);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.largeButton}\r\n            >\r\n              Cancel Order\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={previewOrderHandler}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={orderItems.length === 0}\r\n              className={styles.largeButton}\r\n            >\r\n              Done\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}